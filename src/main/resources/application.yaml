# spring:
#   application:
#     name: PRODUCT-SERVICE
#   config:
#     import: optional:configserver:http://localhost:8888

# management:
#   endpoints:
#     web:
#       exposure:
#         include: "*"
server:
  port: 8086
  error:
    include-message: never

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    instance-id: ${spring.application.name}:${random.value}

spring:
  application:
    name: PRODUCT-SERVICE
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration

  # Redis Configuration
  data:
    redis:
      # Redis server connection details
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:mypassword}
      
      # Connection and command timeout in milliseconds
      timeout: 2000
      
      # SSL configuration (uncomment and configure if using SSL)
      # ssl:
      #   enabled: false
      #   key-store: classpath:keystore.p12
      #   key-store-password: your-keystore-password
      #   key-store-type: PKCS12
      
      # Lettuce client configuration
      lettuce:
        # Connection pool settings
        pool:
          enabled: true
          max-active: 16
          max-idle: 8
          min-idle: 2
          max-wait: 5000ms
          time-between-eviction-runs: 30000ms
        
        # Client name for monitoring
        client-name: ${spring.application.name:product-service}
        
        # Shutdown timeout
        shutdown-timeout: 100ms
        
        # Cluster configuration (uncomment if using Redis Cluster)
        # cluster:
        #   refresh:
        #     adaptive: true
        #     period: 1m
      
      # Sentinel configuration (uncomment if using Redis Sentinel)
      # sentinel:
      #   master: mymaster
      #   nodes: localhost:26379,localhost:26380,localhost:26381
      #   password: ${REDIS_SENTINEL_PASSWORD:}
      #   sentinel:
      #     username: ${REDIS_SENTINEL_USERNAME:}
      #     password: ${REDIS_SENTINEL_PASSWORD:}

  rabbitmq:
    host: localhost # RabbitMQ host (localhost if running on the same machine)
    port: 5672 # Default RabbitMQ port
    username: guest # Default RabbitMQ username
    password: guest # Default RabbitMQ password
    virtual-host: / # Default virtual host ("/")
    listener:
      simple:
        retry:
          enabled: true # Enable retry for message consumption
          initial-interval: 1000 # Initial retry interval in milliseconds
          max-attempts: 5 # Maximum number of retry attempts
        acknowledge-mode: auto # Auto acknowledgment of messages
  elasticsearch:
    uris:
      - http://localhost:9200
      - http://localhost:9201
    password: guest
    username: elastic
    connection-timeout: 10s
    socket-timeout: 30s

  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB

  main:
    allow-bean-definition-overriding: true
  datasource:
    url: jdbc:postgresql://localhost:26257/defaultdb?sslmode=disable
    username: root
    password: ""
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: create-drop # Change this if needed (create, create-drop, validate, none)
    # properties:
    #   hibernate:
    #     dialect: org.hibernate.dialect.CockroachDB201Dialect # Correct dialect
    show-sql: true

  sql:
    init:
      #   data-locations:
      #     - classpath:sql/init.sql
      mode: always

logging:
  level:
    org:
      springframework:
        web: DEBUG
        data: DEBUG
        security: TRACE
    com:
      product:
        service: DEBUG
    hibernate:
      SQL: DEBUG
      type: TRACE

jwt:
  base64-secret: hl4gDqBxBgOSDWqBlvwFYQInjYRGAdS4lUT7Nf3Zk1nItoSQ9wSFDPU+kXHKcKUW/UKbpGv9bCsa9S/QsoFRHw==
  access_token-validity-in-seconds: 90000000
  refresh_token-validity-in-seconds: 100000000
